{
  "version": 4,
  "terraform_version": "1.6.5",
  "serial": 5,
  "lineage": "ce1d8df4-b78d-730c-08a8-97e2f8f91f07",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana-prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana-prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.68.0",
                "chart": "kube-prometheus-stack",
                "name": "grafana-prometheus",
                "namespace": "grafana-prometheus",
                "revision": 3,
                "values": "{\"alertmanager\":{\"alertmanagerSpec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}}},\"enabled\":true,\"fullnameOverride\":\"alertmanager\",\"ingress\":{\"enabled\":false}},\"coreDns\":{\"enabled\":true},\"defaultRules\":{\"create\":true,\"rules\":{\"alertmanager\":true,\"configReloaders\":true,\"etcd\":true,\"general\":true,\"k8s\":true,\"kubeApiserverAvailability\":true,\"kubeApiserverBurnrate\":true,\"kubeApiserverHistogram\":true,\"kubeApiserverSlos\":true,\"kubePrometheusGeneral\":true,\"kubePrometheusNodeRecording\":true,\"kubeProxy\":true,\"kubeScheduler\":true,\"kubeStateMetrics\":true,\"kubelet\":true,\"kubernetesApps\":true,\"kubernetesResources\":true,\"kubernetesStorage\":true,\"kubernetesSystem\":true,\"network\":true,\"node\":true,\"nodeExporterAlerting\":true,\"nodeExporterRecording\":true,\"prometheus\":true,\"prometheusOperator\":true}},\"fullnameOverride\":\"prometheus\",\"grafana\":{\"admin\":{\"existingSecret\":\"grafana-admin-credentials\",\"passwordKey\":\"admin-password\",\"userKey\":\"admin-user\"},\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"defaultDashboardsEnabled\":true,\"defaultDashboardsTimezone\":\"utc-03\",\"enabled\":true,\"forceDeployDashboards\":false,\"forceDeployDatasources\":false,\"fullnameOverride\":\"grafana\",\"serviceMonitor\":{\"enabled\":true}},\"kube-state-metrics\":{\"fullnameOverride\":\"kube-state-metrics\",\"prometheus\":{\"monitor\":{\"enabled\":true,\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"selfMonitor\":{\"enabled\":true}},\"kubeApiServer\":{\"enabled\":true},\"kubeControllerManager\":{\"enabled\":true,\"endpoints\":[\"10.21.1.233\"]},\"kubeDns\":{\"enabled\":false},\"kubeEtcd\":{\"enabled\":true,\"endpoints\":[\"10.21.1.233\"],\"service\":{\"enabled\":true,\"port\":2381,\"targetPort\":2381}},\"kubeProxy\":{\"enabled\":true,\"endpoints\":[\"10.21.1.233\"]},\"kubeScheduler\":{\"enabled\":true,\"endpoints\":[\"10.21.1.233\"]},\"kubeStateMetrics\":{\"enabled\":true},\"kubelet\":{\"enabled\":true,\"serviceMonitor\":{\"metricRelabelings\":[{\"action\":\"replace\",\"sourceLabels\":[\"node\"],\"targetLabel\":\"instance\"}]}},\"nameOverride\":\"grafana-prometheus-stack\",\"nodeExporter\":{\"enabled\":true,\"serviceMonitor\":{\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"prometheus\":{\"enabled\":true,\"prometheusSpec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"enableAdminAPI\":true,\"podMonitorSelectorNilUsesHelmValues\":false,\"probeSelectorNilUsesHelmValues\":false,\"replicaExternalLabelName\":\"replica\",\"replicas\":1,\"retention\":\"100h\",\"ruleSelectorNilUsesHelmValues\":false,\"serviceMonitorSelectorNilUsesHelmValues\":false,\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"50Gi\"}},\"storageClassName\":\"oci-bv\"}}},\"walCompression\":true}},\"prometheus-node-exporter\":{\"extraArgs\":[\"--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)\",\"--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$\"],\"fullnameOverride\":\"node-exporter\",\"podLabels\":{\"jobLabel\":\"node-exporter\"},\"prometheus\":{\"monitor\":{\"enabled\":true,\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"resources\":{\"limits\":{\"memory\":\"2048Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}},\"service\":{\"portName\":\"http-metrics\"}},\"prometheusOperator\":{\"admissionWebhooks\":{\"patch\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"annotations\":{},\"enabled\":true,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"registry.k8s.io\",\"repository\":\"ingress-nginx/kube-webhook-certgen\",\"sha\":\"\",\"tag\":\"v20221220-controller-v1.5.1-58-g787ea74b6\"},\"nodeSelector\":{},\"podAnnotations\":{},\"priorityClassName\":\"\",\"resources\":{}}},\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"enabled\":true,\"logLevel\":\"info\",\"prometheusConfigReloader\":{\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"50Mi\"}}}},\"thanosRuler\":{\"enabled\":false}}",
                "version": "51.10.0"
              }
            ],
            "name": "grafana-prometheus",
            "namespace": "grafana-prometheus",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "fullnameOverride: prometheus\nnameOverride: grafana-prometheus-stack\n\ndefaultRules:\n  create: true\n  rules:\n    alertmanager: true\n    etcd: true\n    configReloaders: true\n    general: true\n    k8s: true\n    kubeApiserverAvailability: true\n    kubeApiserverBurnrate: true\n    kubeApiserverHistogram: true\n    kubeApiserverSlos: true\n    kubelet: true\n    kubeProxy: true\n    kubePrometheusGeneral: true\n    kubePrometheusNodeRecording: true\n    kubernetesApps: true\n    kubernetesResources: true\n    kubernetesStorage: true\n    kubernetesSystem: true\n    kubeScheduler: true\n    kubeStateMetrics: true\n    network: true\n    node: true\n    nodeExporterAlerting: true\n    nodeExporterRecording: true\n    prometheus: true\n    prometheusOperator: true\n\nalertmanager:\n  fullnameOverride: alertmanager\n  enabled: true\n  ingress:\n    enabled: false\n  alertmanagerSpec:\n    affinity:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: kubernetes.io/arch\n              operator: NotIn\n              values:\n              - arm64\n\ngrafana:\n  enabled: true\n  fullnameOverride: grafana\n  forceDeployDatasources: false\n  forceDeployDashboards: false\n  defaultDashboardsEnabled: true\n  defaultDashboardsTimezone: utc-03\n  serviceMonitor:\n    enabled: true\n  admin:\n    existingSecret: grafana-admin-credentials\n    userKey: admin-user\n    passwordKey: admin-password\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/arch\n            operator: NotIn\n            values:\n            - arm64\n\nkubeApiServer:\n  enabled: true\n\nkubelet:\n  enabled: true\n  serviceMonitor:\n    metricRelabelings:\n      - action: replace\n        sourceLabels:\n          - node\n        targetLabel: instance\n\nkubeControllerManager:\n  enabled: true\n  endpoints: # ips of servers \n    - 10.21.1.233\n    #- 192.168.30.39\n    #- 192.168.30.40\n\ncoreDns:\n  enabled: true\n\nkubeDns:\n  enabled: false\n\nkubeEtcd:\n  enabled: true\n  endpoints: # ips of servers\n    - 10.21.1.233\n    #- 192.168.30.39\n    #- 192.168.30.40\n  service:\n    enabled: true\n    port: 2381\n    targetPort: 2381\n\nkubeScheduler:\n  enabled: true\n  endpoints: # ips of servers\n    - 10.21.1.233\n    #- 192.168.30.39\n    #- 192.168.30.40\n\nkubeProxy:\n  enabled: true\n  endpoints: # ips of servers\n    - 10.21.1.233\n    #- 192.168.30.39\n    #- 192.168.30.40\n\nkubeStateMetrics:\n  enabled: true\n\nkube-state-metrics:\n  fullnameOverride: kube-state-metrics\n  selfMonitor:\n    enabled: true\n  prometheus:\n    monitor:\n      enabled: true\n      relabelings:\n        - action: replace\n          regex: (.*)\n          replacement: $1\n          sourceLabels:\n            - __meta_kubernetes_pod_node_name\n          targetLabel: kubernetes_node\n\nnodeExporter:\n  enabled: true\n  serviceMonitor:\n    relabelings:\n      - action: replace\n        regex: (.*)\n        replacement: $1\n        sourceLabels:\n          - __meta_kubernetes_pod_node_name\n        targetLabel: kubernetes_node\n\nprometheus-node-exporter:\n  fullnameOverride: node-exporter\n  podLabels:\n    jobLabel: node-exporter\n  extraArgs:\n    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)\n    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$\n  service:\n    portName: http-metrics\n  prometheus:\n    monitor:\n      enabled: true\n      relabelings:\n        - action: replace\n          regex: (.*)\n          replacement: $1\n          sourceLabels:\n            - __meta_kubernetes_pod_node_name\n          targetLabel: kubernetes_node\n  resources:\n    requests:\n      memory: 512Mi\n      cpu: 250m\n    limits:\n      memory: 2048Mi\n\nprometheusOperator:\n  enabled: true\n  admissionWebhooks:\n    patch:\n      enabled: true\n      image:\n        registry: registry.k8s.io\n        repository: ingress-nginx/kube-webhook-certgen\n        tag: v20221220-controller-v1.5.1-58-g787ea74b6\n        sha: \"\"\n        pullPolicy: IfNotPresent\n      resources: {}\n      priorityClassName: \"\"\n      annotations: {}\n      podAnnotations: {}\n      nodeSelector: {}\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: kubernetes.io/arch\n                operator: NotIn\n                values:\n                - arm64\n\n  logLevel: info\n  prometheusConfigReloader:\n    resources:\n      requests:\n        cpu: 200m\n        memory: 50Mi\n      limits:\n        memory: 100Mi\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: kubernetes.io/arch\n            operator: NotIn\n            values:\n            - arm64\n\nprometheus:\n  enabled: true\n  prometheusSpec:\n    replicas: 1\n    replicaExternalLabelName: \"replica\"\n    ruleSelectorNilUsesHelmValues: false\n    serviceMonitorSelectorNilUsesHelmValues: false\n    podMonitorSelectorNilUsesHelmValues: false\n    probeSelectorNilUsesHelmValues: false\n    retention: 100h\n    enableAdminAPI: true\n    walCompression: true\n    storageSpec: \n        volumeClaimTemplate:\n          spec:\n            storageClassName: oci-bv\n            accessModes: [\"ReadWriteOnce\"]\n            resources:\n              requests:\n                storage: 50Gi\n    affinity:\n      nodeAffinity:\n        requiredDuringSchedulingIgnoredDuringExecution:\n          nodeSelectorTerms:\n          - matchExpressions:\n            - key: kubernetes.io/arch\n              operator: NotIn\n              values:\n              - arm64\n\nthanosRuler:\n  enabled: false\n\n"
            ],
            "verify": false,
            "version": "51.10.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
