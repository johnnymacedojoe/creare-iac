{
  "version": 4,
  "terraform_version": "1.5.0",
  "serial": 6,
  "lineage": "2277457f-e538-d27c-6977-f7030608a009",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "grafana-prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "grafana-prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.73.2",
                "chart": "kube-prometheus-stack",
                "name": "grafana-prometheus",
                "namespace": "grafana-prometheus",
                "revision": 1,
                "values": "{\"alertmanager\":{\"alertmanagerSpec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}}},\"enabled\":true,\"fullnameOverride\":\"alertmanager\",\"ingress\":{\"enabled\":false}},\"coreDns\":{\"enabled\":true},\"defaultRules\":{\"create\":true,\"rules\":{\"alertmanager\":true,\"configReloaders\":true,\"etcd\":true,\"general\":true,\"k8s\":true,\"kubeApiserverAvailability\":true,\"kubeApiserverBurnrate\":true,\"kubeApiserverHistogram\":true,\"kubeApiserverSlos\":true,\"kubePrometheusGeneral\":true,\"kubePrometheusNodeRecording\":true,\"kubeProxy\":true,\"kubeScheduler\":true,\"kubeStateMetrics\":true,\"kubelet\":true,\"kubernetesApps\":true,\"kubernetesResources\":true,\"kubernetesStorage\":true,\"kubernetesSystem\":true,\"network\":true,\"node\":true,\"nodeExporterAlerting\":true,\"nodeExporterRecording\":true,\"prometheus\":true,\"prometheusOperator\":true}},\"fullnameOverride\":\"prometheus\",\"grafana\":{\"admin\":{\"existingSecret\":\"grafana-admin-credentials\",\"passwordKey\":\"admin-password\",\"userKey\":\"admin-user\"},\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"defaultDashboardsEnabled\":true,\"defaultDashboardsTimezone\":\"utc-03\",\"enabled\":true,\"forceDeployDashboards\":false,\"forceDeployDatasources\":false,\"fullnameOverride\":\"grafana\",\"serviceMonitor\":{\"enabled\":true}},\"kube-state-metrics\":{\"fullnameOverride\":\"kube-state-metrics\",\"prometheus\":{\"monitor\":{\"enabled\":true,\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"selfMonitor\":{\"enabled\":true}},\"kubeApiServer\":{\"enabled\":true},\"kubeControllerManager\":{\"enabled\":true,\"endpoints\":[\"10.50.1.78\"]},\"kubeDns\":{\"enabled\":false},\"kubeEtcd\":{\"enabled\":true,\"endpoints\":[\"10.50.1.78\"],\"service\":{\"enabled\":true,\"port\":2381,\"targetPort\":2381}},\"kubeProxy\":{\"enabled\":true,\"endpoints\":[\"10.50.1.78\"]},\"kubeScheduler\":{\"enabled\":true,\"endpoints\":[\"10.50.1.78\"]},\"kubeStateMetrics\":{\"enabled\":true},\"kubelet\":{\"enabled\":true,\"serviceMonitor\":{\"metricRelabelings\":[{\"action\":\"replace\",\"sourceLabels\":[\"node\"],\"targetLabel\":\"instance\"}]}},\"nameOverride\":\"grafana-prometheus-stack\",\"nodeExporter\":{\"enabled\":true,\"serviceMonitor\":{\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"prometheus\":{\"enabled\":true,\"prometheusSpec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"enableAdminAPI\":true,\"podMonitorSelectorNilUsesHelmValues\":false,\"probeSelectorNilUsesHelmValues\":false,\"replicaExternalLabelName\":\"replica\",\"replicas\":1,\"retention\":\"100h\",\"ruleSelectorNilUsesHelmValues\":false,\"serviceMonitorSelectorNilUsesHelmValues\":false,\"storageSpec\":{\"volumeClaimTemplate\":{\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"50Gi\"}},\"storageClassName\":\"oci-bv\"}}},\"walCompression\":true}},\"prometheus-node-exporter\":{\"extraArgs\":[\"--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)\",\"--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$\"],\"fullnameOverride\":\"node-exporter\",\"podLabels\":{\"jobLabel\":\"node-exporter\"},\"prometheus\":{\"monitor\":{\"enabled\":true,\"relabelings\":[{\"action\":\"replace\",\"regex\":\"(.*)\",\"replacement\":\"$1\",\"sourceLabels\":[\"__meta_kubernetes_pod_node_name\"],\"targetLabel\":\"kubernetes_node\"}]}},\"resources\":{\"limits\":{\"memory\":\"2048Mi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"512Mi\"}},\"service\":{\"portName\":\"http-metrics\"}},\"prometheusOperator\":{\"admissionWebhooks\":{\"patch\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"annotations\":{},\"enabled\":true,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"registry\":\"registry.k8s.io\",\"repository\":\"ingress-nginx/kube-webhook-certgen\",\"sha\":\"\",\"tag\":\"v20221220-controller-v1.5.1-58-g787ea74b6\"},\"nodeSelector\":{},\"podAnnotations\":{},\"priorityClassName\":\"\",\"resources\":{}}},\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\"]}]}]}}},\"enabled\":true,\"logLevel\":\"info\",\"prometheusConfigReloader\":{\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"50Mi\"}}}},\"thanosRuler\":{\"enabled\":false}}",
                "version": "58.7.0"
              }
            ],
            "name": "grafana-prometheus",
            "namespace": "grafana-prometheus",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "fullnameOverride: prometheus\r\nnameOverride: grafana-prometheus-stack\r\n\r\ndefaultRules:\r\n  create: true\r\n  rules:\r\n    alertmanager: true\r\n    etcd: true\r\n    configReloaders: true\r\n    general: true\r\n    k8s: true\r\n    kubeApiserverAvailability: true\r\n    kubeApiserverBurnrate: true\r\n    kubeApiserverHistogram: true\r\n    kubeApiserverSlos: true\r\n    kubelet: true\r\n    kubeProxy: true\r\n    kubePrometheusGeneral: true\r\n    kubePrometheusNodeRecording: true\r\n    kubernetesApps: true\r\n    kubernetesResources: true\r\n    kubernetesStorage: true\r\n    kubernetesSystem: true\r\n    kubeScheduler: true\r\n    kubeStateMetrics: true\r\n    network: true\r\n    node: true\r\n    nodeExporterAlerting: true\r\n    nodeExporterRecording: true\r\n    prometheus: true\r\n    prometheusOperator: true\r\n\r\nalertmanager:\r\n  fullnameOverride: alertmanager\r\n  enabled: true\r\n  ingress:\r\n    enabled: false\r\n  alertmanagerSpec:\r\n    affinity:\r\n      nodeAffinity:\r\n        requiredDuringSchedulingIgnoredDuringExecution:\r\n          nodeSelectorTerms:\r\n          - matchExpressions:\r\n            - key: kubernetes.io/arch\r\n              operator: NotIn\r\n              values:\r\n              - arm64\r\n\r\ngrafana:\r\n  enabled: true\r\n  fullnameOverride: grafana\r\n  forceDeployDatasources: false\r\n  forceDeployDashboards: false\r\n  defaultDashboardsEnabled: true\r\n  defaultDashboardsTimezone: utc-03\r\n  serviceMonitor:\r\n    enabled: true\r\n  admin:\r\n    existingSecret: grafana-admin-credentials\r\n    userKey: admin-user\r\n    passwordKey: admin-password\r\n  affinity:\r\n    nodeAffinity:\r\n      requiredDuringSchedulingIgnoredDuringExecution:\r\n        nodeSelectorTerms:\r\n        - matchExpressions:\r\n          - key: kubernetes.io/arch\r\n            operator: NotIn\r\n            values:\r\n            - arm64\r\n\r\nkubeApiServer:\r\n  enabled: true\r\n\r\nkubelet:\r\n  enabled: true\r\n  serviceMonitor:\r\n    metricRelabelings:\r\n      - action: replace\r\n        sourceLabels:\r\n          - node\r\n        targetLabel: instance\r\n\r\nkubeControllerManager:\r\n  enabled: true\r\n  endpoints: # ips of servers \r\n    - 10.50.1.78\r\n    #- 192.168.30.39\r\n    #- 192.168.30.40\r\n\r\ncoreDns:\r\n  enabled: true\r\n\r\nkubeDns:\r\n  enabled: false\r\n\r\nkubeEtcd:\r\n  enabled: true\r\n  endpoints: # ips of servers\r\n    - 10.50.1.78\r\n    #- 192.168.30.39\r\n    #- 192.168.30.40\r\n  service:\r\n    enabled: true\r\n    port: 2381\r\n    targetPort: 2381\r\n\r\nkubeScheduler:\r\n  enabled: true\r\n  endpoints: # ips of servers\r\n    - 10.50.1.78\r\n    #- 192.168.30.39\r\n    #- 192.168.30.40\r\n\r\nkubeProxy:\r\n  enabled: true\r\n  endpoints: # ips of servers\r\n    - 10.50.1.78\r\n    #- 192.168.30.39\r\n    #- 192.168.30.40\r\n\r\nkubeStateMetrics:\r\n  enabled: true\r\n\r\nkube-state-metrics:\r\n  fullnameOverride: kube-state-metrics\r\n  selfMonitor:\r\n    enabled: true\r\n  prometheus:\r\n    monitor:\r\n      enabled: true\r\n      relabelings:\r\n        - action: replace\r\n          regex: (.*)\r\n          replacement: $1\r\n          sourceLabels:\r\n            - __meta_kubernetes_pod_node_name\r\n          targetLabel: kubernetes_node\r\n\r\nnodeExporter:\r\n  enabled: true\r\n  serviceMonitor:\r\n    relabelings:\r\n      - action: replace\r\n        regex: (.*)\r\n        replacement: $1\r\n        sourceLabels:\r\n          - __meta_kubernetes_pod_node_name\r\n        targetLabel: kubernetes_node\r\n\r\nprometheus-node-exporter:\r\n  fullnameOverride: node-exporter\r\n  podLabels:\r\n    jobLabel: node-exporter\r\n  extraArgs:\r\n    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)\r\n    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$\r\n  service:\r\n    portName: http-metrics\r\n  prometheus:\r\n    monitor:\r\n      enabled: true\r\n      relabelings:\r\n        - action: replace\r\n          regex: (.*)\r\n          replacement: $1\r\n          sourceLabels:\r\n            - __meta_kubernetes_pod_node_name\r\n          targetLabel: kubernetes_node\r\n  resources:\r\n    requests:\r\n      memory: 512Mi\r\n      cpu: 250m\r\n    limits:\r\n      memory: 2048Mi\r\n\r\nprometheusOperator:\r\n  enabled: true\r\n  admissionWebhooks:\r\n    patch:\r\n      enabled: true\r\n      image:\r\n        registry: registry.k8s.io\r\n        repository: ingress-nginx/kube-webhook-certgen\r\n        tag: v20221220-controller-v1.5.1-58-g787ea74b6\r\n        sha: \"\"\r\n        pullPolicy: IfNotPresent\r\n      resources: {}\r\n      priorityClassName: \"\"\r\n      annotations: {}\r\n      podAnnotations: {}\r\n      nodeSelector: {}\r\n      affinity:\r\n        nodeAffinity:\r\n          requiredDuringSchedulingIgnoredDuringExecution:\r\n            nodeSelectorTerms:\r\n            - matchExpressions:\r\n              - key: kubernetes.io/arch\r\n                operator: NotIn\r\n                values:\r\n                - arm64\r\n\r\n  logLevel: info\r\n  prometheusConfigReloader:\r\n    resources:\r\n      requests:\r\n        cpu: 200m\r\n        memory: 50Mi\r\n      limits:\r\n        memory: 100Mi\r\n  affinity:\r\n    nodeAffinity:\r\n      requiredDuringSchedulingIgnoredDuringExecution:\r\n        nodeSelectorTerms:\r\n        - matchExpressions:\r\n          - key: kubernetes.io/arch\r\n            operator: NotIn\r\n            values:\r\n            - arm64\r\n\r\nprometheus:\r\n  enabled: true\r\n  prometheusSpec:\r\n    replicas: 1\r\n    replicaExternalLabelName: \"replica\"\r\n    ruleSelectorNilUsesHelmValues: false\r\n    serviceMonitorSelectorNilUsesHelmValues: false\r\n    podMonitorSelectorNilUsesHelmValues: false\r\n    probeSelectorNilUsesHelmValues: false\r\n    retention: 100h\r\n    enableAdminAPI: true\r\n    walCompression: true\r\n    storageSpec: \r\n        volumeClaimTemplate:\r\n          spec:\r\n            storageClassName: oci-bv\r\n            accessModes: [\"ReadWriteOnce\"]\r\n            resources:\r\n              requests:\r\n                storage: 50Gi\r\n    affinity:\r\n      nodeAffinity:\r\n        requiredDuringSchedulingIgnoredDuringExecution:\r\n          nodeSelectorTerms:\r\n          - matchExpressions:\r\n            - key: kubernetes.io/arch\r\n              operator: NotIn\r\n              values:\r\n              - arm64\r\n\r\nthanosRuler:\r\n  enabled: false\r\n\r\n"
            ],
            "verify": false,
            "version": "58.7.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
